package net.nosocial.traits.gui;

import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;
import net.nosocial.traits.Traits;

import javax.swing.*;
import javax.swing.plaf.FontUIResource;
import javax.swing.text.StyleContext;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Locale;

public class TraitsForm {
    JPanel mainPanel;
    private JButton uncertainButton;
    private JButton yesButton;
    private JButton noButton;
    private JButton profileButton;
    private JButton infoButton;
    private JButton skipButton;
    private JButton aboutButton;
    private JButton button1;
    private JButton button2;
    private JTextPane pFontFamilySansTextPane;


    public TraitsForm() {
        profileButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JOptionPane.showMessageDialog(mainPanel, "You answered 36 of 5271 questions for self.\n" +
                        "\n" +
                        "   3 +happy\n" +
                        "   2 -rowdy\n" +
                        "   2 -hypersensitive\n" +
                        "\n", "Profile — johndoe", JOptionPane.PLAIN_MESSAGE);
            }
        });
        aboutButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JFrame frame = new JFrame("NSN Traits v2.0 — About");
                frame.setContentPane(new AboutForm().panel1);
                frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
                frame.pack();
                frame.setLocationRelativeTo(null); // center
                frame.setVisible(true);
            }
        });
        infoButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JOptionPane.showMessageDialog(mainPanel, "This behavior is associated with SOCIALLY RESPONSIBLE trait (positive).\n\n",
                        "Behavior info", JOptionPane.INFORMATION_MESSAGE);
            }
        });
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("NSN Traits v2.0 — traits.db");
        frame.setContentPane(new TraitsForm().mainPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setLocationRelativeTo(null); // center
        frame.setVisible(true);
    }

    public static void answerLoop(Traits traits) {
        JFrame frame = new JFrame("NSN Traits v2.0 — " + traits.databaseFile());
        frame.setContentPane(new TraitsForm().mainPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setLocationRelativeTo(null); // center
        frame.setVisible(true);
    }

    private void createUIComponents() {
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new FormLayout("fill:d:grow", "center:max(d;20px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:3dlu:noGrow,center:max(d;8dlu):noGrow,top:4dlu:noGrow,fill:d:noGrow,top:4dlu:noGrow,center:d:grow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;20px):noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:max(d;20px):noGrow"));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FormLayout("fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:d:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:d:grow", "center:d:grow"));
        CellConstraints cc = new CellConstraints();
        mainPanel.add(panel1, cc.xy(1, 19));
        yesButton = new JButton();
        yesButton.setText("Yes");
        yesButton.setMnemonic('Y');
        yesButton.setDisplayedMnemonicIndex(0);
        yesButton.setToolTipText("Yes (adds one level to the trait)");
        panel1.add(yesButton, cc.xy(3, 1));
        uncertainButton = new JButton();
        uncertainButton.setText("Uncertain");
        uncertainButton.setMnemonic('U');
        uncertainButton.setDisplayedMnemonicIndex(0);
        uncertainButton.setToolTipText("Uncertain (both yes and no, neither yes nor no, doesn't change the level of the trait)");
        panel1.add(uncertainButton, cc.xy(7, 1));
        noButton = new JButton();
        noButton.setText("No");
        noButton.setMnemonic('N');
        noButton.setDisplayedMnemonicIndex(0);
        noButton.setToolTipText("No (subtracts one level from the trait)");
        panel1.add(noButton, cc.xy(11, 1));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FormLayout("fill:d:grow", "center:d:grow"));
        mainPanel.add(panel2, cc.xy(1, 15));
        final JLabel label1 = new JLabel();
        Font label1Font = this.$$$getFont$$$(null, -1, 18, label1.getFont());
        if (label1Font != null) label1.setFont(label1Font);
        label1.setHorizontalAlignment(0);
        label1.setHorizontalTextPosition(0);
        label1.setText("Question 37 of 5271");
        panel2.add(label1, cc.xy(1, 1));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow,fill:m:grow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "fill:d:grow,top:4dlu:noGrow,center:max(d;4px):noGrow"));
        mainPanel.add(panel3, cc.xy(1, 7, CellConstraints.DEFAULT, CellConstraints.CENTER));
        button1 = new JButton();
        button1.setText("⇦");
        button1.setToolTipText("Back to the previous question");
        panel3.add(button1, cc.xywh(3, 1, 1, 3, CellConstraints.DEFAULT, CellConstraints.CENTER));
        button2 = new JButton();
        button2.setText("⇨");
        button2.setToolTipText("Forward towards the last question");
        panel3.add(button2, cc.xywh(8, 1, 1, 3, CellConstraints.DEFAULT, CellConstraints.CENTER));
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:max(d;4px):grow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:grow"));
        mainPanel.add(panel4, cc.xy(1, 11));
        infoButton = new JButton();
        infoButton.setText("Info");
        infoButton.setMnemonic('I');
        infoButton.setDisplayedMnemonicIndex(0);
        infoButton.setToolTipText("Give an info about traits associated with this behavior");
        panel4.add(infoButton, cc.xy(3, 1));
        skipButton = new JButton();
        skipButton.setText("Skip");
        skipButton.setMnemonic('S');
        skipButton.setDisplayedMnemonicIndex(0);
        skipButton.setToolTipText("Skip the question to answer at later time (random)");
        panel4.add(skipButton, cc.xy(7, 1));
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:82px:noGrow,left:6dlu:noGrow,fill:max(d;4px):grow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:max(d;4px):grow,left:4dlu:noGrow,fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:d:grow"));
        mainPanel.add(panel5, cc.xy(1, 3, CellConstraints.FILL, CellConstraints.DEFAULT));
        profileButton = new JButton();
        profileButton.setText("Profile");
        profileButton.setToolTipText("Show traits profile (levels)");
        panel5.add(profileButton, cc.xy(11, 1));
        aboutButton = new JButton();
        aboutButton.setText("About");
        aboutButton.setToolTipText("About this app");
        panel5.add(aboutButton, cc.xy(3, 1));
        final JLabel label2 = new JLabel();
        Font label2Font = this.$$$getFont$$$(null, -1, 16, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setText("johndoe");
        panel5.add(label2, cc.xy(7, 1));
        pFontFamilySansTextPane = new JTextPane();
        pFontFamilySansTextPane.setContentType("text/html");
        pFontFamilySansTextPane.setMargin(new Insets(30, 30, 30, 30));
        pFontFamilySansTextPane.setMinimumSize(new Dimension(700, 150));
        pFontFamilySansTextPane.setOpaque(false);
        pFontFamilySansTextPane.setPreferredSize(new Dimension(1100, 150));
        pFontFamilySansTextPane.setText("<html>\n  <head>\n    <style type=\"text/css\">\n      <!--\n        p { font-family: sans-serif }\n      -->\n    </style>\n    \n  </head>\n  <body>\n    <p style=\"margin-top: 0\">\n      <font size=\"18\">Taking responsibility for other people (watching a \n      friend to make sure she gets home safely)</font>\n    </p>\n  </body>\n</html>\n");
        mainPanel.add(pFontFamilySansTextPane, cc.xy(1, 9, CellConstraints.FILL, CellConstraints.FILL));
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        Font font = new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
        boolean isMac = System.getProperty("os.name", "").toLowerCase(Locale.ENGLISH).startsWith("mac");
        Font fontWithFallback = isMac ? new Font(font.getFamily(), font.getStyle(), font.getSize()) : new StyleContext().getFont(font.getFamily(), font.getStyle(), font.getSize());
        return fontWithFallback instanceof FontUIResource ? fontWithFallback : new FontUIResource(fontWithFallback);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
